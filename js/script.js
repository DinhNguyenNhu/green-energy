// Mobile Nav Function
function menuTop() {
    var x = document.getElementById("mytopnav");
    if (x.className === "topnav") {
        x.className += " show";
    } else {
        x.className = "topnav";
    }
};

// Load your images on page-load
function preloader() {
    const imagesList = [
       "./img/solar-energy-img.jpeg",
       "./img/wind-energy-img.jpeg",
       "./img/geothermal-energy-img.jpeg"
    ];
    const images = [];
    for (let i = 0; i < imagesList.length; i++) {
        images[i] = new Image();
        images[i].src = imagesList[i];
    }

    // Images ready to be used:
    console.log(`Preloaded images:\n\t${images[0].src}\n\t${images[1].src}\n\t${images[2].src}`);
};    
window.addEventListener("load", preloader);

/* Get all buttons in a NODE LIST of buttons (array like structure) */
let btn = document.querySelectorAll(".button");

/* Complete your resource-object that will store the dynamic content. Resource object should 3 sub-objects. Give your sub-objects meaningful names. Every sub-object should have the following properties headingContent, bodyText, imgUrl and imgAlt. */
let data = {
    solarEnergy: {
      headingContent: "Solar Energy",
      imgUrl: "./img/solar-energy-img.jpeg",
      imgAlt: "Solar Energy Image",
      bodyText:
        "Community Solar Programs enable individuals to collectively invest in a solar energy project and share the benefits. These programs allow residents to subscribe to a portion of a shared solar installation and receive credits on their electricity bills for the energy generated by their share. By pooling resources and leveraging economies of scale, community solar programs make green energy more accessible and affordable for individuals who may not have the means to install their own solar panels.",
    },
    windEnergy: {
      headingContent: "Wind Energy",
      imgUrl: "./img/wind-energy-img.jpeg",
      imgAlt: "Wind Energy Image",
      bodyText:
        "Wind power is a clean and renewable energy source. Wind turbines harness energy from the wind using mechanical power to spin a generator and create electricity. Therefore, not only is wind an abundant and inexhaustible resource, but it also provides electricity without burning any fuel or polluting the air. Communities that develop wind energy can use the extra revenue to put towards school budgets, reduce the tax burden on homeowners, and address local infrastructure projects.",
    },
    geothermalEnergy: {
      headingContent: "Geothermal Energy",
      imgUrl: "./img/geothermal-energy-img.jpeg",
      imgAlt: "Geothermal Energy Image",
      bodyText:
        "Geothermal energy is heat that is generated within the Earth. It is a renewable resource that can be harvested for human use. Their heat can be captured and used directly for heat, or their steam can be used to generate electricity. Geothermal energy can be used to heat structures such as buildings, parking lots, and sidewalks. Many countries have developed methods of tapping into geothermal energy. Different types of geothermal energy are available in different parts of the world.",
    }
  };

/* Get the reference to your HTML-container that will be dynamically loaded from the resource-object. */
let divContent = document.querySelector(".html-dynamic");

/* The first button in a NODE LIST of buttons will initially have the id: active-button - this will uniquely style the active button (CSS rule). 
    
The first content from the resource-object will be loaded on the page load:
    `<h1>${headingContent}</h1>
     <img src="${imgUrl}" alt="${imgAlt}">
     <p>${bodyText}</p>` */
     
let markup = `
    <h1>${data.solarEnergy.headingContent}</h1>
    <div class="float">
    <img src="${data.solarEnergy.imgUrl}" alt="${data.solarEnergy.imgAlt}" class="img-float">
    <p>${data.solarEnergy.bodyText}</p>
    </div>
    `;
    
    divContent.innerHTML = markup;

/* Start your handleSelection function here. */
function handleSelection(event) {
    let currentItem = event.target.parentElement;

/* Remove the id active-button from the element that contains it prior to the click-event. 
    
This will require the loop throught the NODE LIST of buttons. Inside the loop, use conditional and the element object method hasAttribute() to check if the current button in the loop containes the id. If it does, use element-object property removeAttribute() to remove the id. */
    for (let i = 0; i < btn.length; i++) {
        if (btn[i].hasAttribute("id")) {
            btn[i].removeAttribute("id");
        }
    }

/* Use the element-object method setAttribute() to set the id active-button to the currently clicked button. */
currentItem.setAttribute("id", "active-button");

/* Use conditional and event-object to check which button is clicked and based on that, create HTML with the data inside the backticks:
        `<h1>${headingContent}</h1>
         <img src="${imgUrl}" alt="${imgAlt}">
         <p>${bodyText}</p>`
Assign this content to your HTML-container that will be dynamically loaded (you already got the reference to this container before you started the function handleSelection) */ 
if (btn[0].hasAttribute("id")) {
    divContent.innerHTML = `<h1>${data.solarEnergy.headingContent}</h1>
        <div class="float">
        <img src="${data.solarEnergy.imgUrl}" alt="${data.solarEnergy.imgAlt}" class="img-float">
        <p>${data.solarEnergy.bodyText}</p>
        </div>
        `;
  } else if (btn[1].hasAttribute("id")) {
    divContent.innerHTML = `<h1>${data.windEnergy.headingContent}</h1>
        <div class="float">
        <img src="${data.windEnergy.imgUrl}" alt="${data.windEnergy.imgAlt}" class="img-float">
        <p>${data.windEnergy.bodyText}</p>
        </div>
        `;
  } else if (btn[2].hasAttribute("id")) {
    divContent.innerHTML = `<h1>${data.geothermalEnergy.headingContent}</h1>
        <div class="float">
        <img src="${data.geothermalEnergy.imgUrl}" alt="${data.geothermalEnergy.imgAlt}" class="img-float">
        <p>${data.geothermalEnergy.bodyText}</p>
        </div>
        `;
  } else {
    console("Error");
}

/* Close your handleSelection function here. */  
}

/* Register all buttons to click event. The event-handler handleSelection will listen for this event to happen. */ 
for (let i = 0; i < btn.length; i++) {
    btn[i].addEventListener('click', handleSelection);
}